set cut_paste_input [stack 0]
version 13.1 v3
Group {
 inputs 0
 name DominantWavelength
 selected true
 xpos 360
 ypos -218
 postage_stamp true
 addUserKnob {20 User}
 addUserKnob {41 presets_dst l dst T GamutConvert_live.presets_dst}
 addUserKnob {41 dst_name l "" -STARTLINE T GamutConvert_live.dst_name}
}
 Reformat {
  inputs 0
  type "to box"
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  box_width 1920
  box_height 20
  box_fixed true
  black_outside true
  pbb true
  name Reformat
  xpos -21
  ypos -325
 }
 Expression {
  channel0 rgba
  expr0 "x / (width - 1) * (cct_max - cct_min) + cct_min"
  name ACEScct_ramp
  xpos -21
  ypos -301
  hide_input true
  postage_stamp true
  addUserKnob {20 User}
  addUserKnob {7 cct_min l "ACEScct min" R -0.5 0.5}
  addUserKnob {7 cct_max l "ACEScct max" R 0.5 1.468}
  cct_max 1.43
 }
 Group {
  name LogConvert_ACESLog
  xpos -21
  ypos -229
  addUserKnob {20 ACESLog_tab l ACESLog}
  addUserKnob {4 operation M {log2lin lin2log}}
  addUserKnob {4 type M {ACEScct ACEScc ACESproxy}}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos -10
  }
  Dot {
   name Dot1
   xpos -6
   ypos 74
  }
set Nd753000 [stack 0]
  Dot {
   name Dot2
   xpos 234
   ypos 74
  }
set Nd752c00 [stack 0]
  Dot {
   name Dot3
   xpos 474
   ypos 74
  }
set Nd752800 [stack 0]
  Expression {
   expr0 r<0?0:((log(r)/log(2)+2.5)*50+425)/1023
   expr1 g<0?0:((log(g)/log(2)+2.5)*50+425)/1023
   expr2 b<0?0:((log(b)/log(2)+2.5)*50+425)/1023
   channel3 none
   name lin2log3
   label ACESproxy
   xpos 440
   ypos 108
  }
push $Nd752800
  Expression {
   expr0 pow(2,((r*1023)-425)/50-2.5)
   expr1 pow(2,((g*1023)-425)/50-2.5)
   expr2 pow(2,((b*1023)-425)/50-2.5)
   channel3 none
   name log2lin2
   label ACESproxy
   xpos 322
   ypos 107
  }
  Switch {
   inputs 2
   which {{parent.operation}}
   name Operation2
   xpos 440
   ypos 190
  }
push $Nd752c00
  Expression {
   expr0 r<0?(log(pow(2,-16))/log(2)+9.72)/17.52:r<pow(2,-15)?(log(pow(2,-16)+r*0.5)/log(2)+9.72)/17.52:(log(r)/log(2)+9.72)/17.52
   expr1 g<0?(log(pow(2,-16))/log(2)+9.72)/17.52:g<pow(2,-15)?(log(pow(2,-16)+g*0.5)/log(2)+9.72)/17.52:(log(g)/log(2)+9.72)/17.52
   expr2 b<0?(log(pow(2,-16))/log(2)+9.72)/17.52:b<pow(2,-15)?(log(pow(2,-16)+b*0.5)/log(2)+9.72)/17.52:(log(b)/log(2)+9.72)/17.52
   channel3 none
   name lin2log1
   label ACEScc
   xpos 200
   ypos 104
  }
push $Nd752c00
  Expression {
   expr0 r<(9.72-15)/17.52?(pow(2,(r*17.52-9.72))-pow(2,-16))*2:pow(2,(r*17.52-9.72))
   expr1 g<(9.72-15)/17.52?(pow(2,(g*17.52-9.72))-pow(2,-16))*2:pow(2,(g*17.52-9.72))
   expr2 b<(9.72-15)/17.52?(pow(2,(b*17.52-9.72))-pow(2,-16))*2:pow(2,(b*17.52-9.72))
   channel3 none
   name log2lin1
   label ACEScc
   xpos 80
   ypos 104
  }
  Switch {
   inputs 2
   which {{parent.operation}}
   name Operation1
   xpos 200
   ypos 190
  }
push $Nd753000
  Expression {
   temp_name0 cut_lin
   temp_expr0 0.0078125
   temp_name1 cut_log
   temp_expr1 0.155251141552511
   temp_name2 A
   temp_expr2 10.5402377416545
   temp_name3 B
   temp_expr3 0.0729055341958355
   expr0 r<=cut_lin?A*r+B:(log(r)/log(2)+9.72)/17.52
   expr1 g<=cut_lin?A*g+B:(log(g)/log(2)+9.72)/17.52
   expr2 b<=cut_lin?A*b+B:(log(b)/log(2)+9.72)/17.52
   channel3 none
   name lin2log
   label ACEScct
   xpos -40
   ypos 108
  }
push $Nd753000
  Expression {
   temp_name0 cut_lin
   temp_expr0 0.0078125
   temp_name1 cut_log
   temp_expr1 0.155251141552511
   temp_name2 A
   temp_expr2 10.5402377416545
   temp_name3 B
   temp_expr3 0.0729055341958355
   expr0 r<=cut_log?(r-B)/A:pow(2,r*17.52-9.72)
   expr1 g<=cut_log?(g-B)/A:pow(2,g*17.52-9.72)
   expr2 b<=cut_log?(b-B)/A:pow(2,b*17.52-9.72)
   channel3 none
   name log2lin
   label ACEScct
   xpos -158
   ypos 105
  }
  Switch {
   inputs 2
   which {{parent.operation}}
   name Operation
   xpos -40
   ypos 190
  }
  Switch {
   inputs 3
   which {{parent.type}}
   name Type
   xpos -40
   ypos 312
  }
  Output {
   name Output
   xpos -40
   ypos 430
  }
push $Nd752800
  Expression {
   temp_name0 StepsPerStop
   temp_expr0 50
   temp_name1 MidCVoffset
   temp_expr1 425
   temp_name2 CVmin
   temp_expr2 64
   temp_name3 CVmax
   temp_expr3 940
   expr0 (r<=pow(2,-9.72)?CVmin:max(CVmin,min(CVmax,rint(((log(r)/log(2)+2.5)*StepsPerStop+MidCVoffset)))))/1023
   channel3 none
   name lin2log2
   label "ACESproxy Matching CTL"
   xpos 557
   ypos 104
  }
 end_group
 Dot {
  name Dot1
  xpos 13
  ypos -185
 }
set Nfb337000 [stack 0]
 Grade {
  multiply {0.01135916 0.004102 0 1}
  multiply_panelDropped true
  name Grade61
  xpos 741
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.01584 0.005723 0 1}
  multiply_panelDropped true
  name Grade60
  xpos 653
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0227 0.00821 0 1}
  multiply_panelDropped true
  name Grade59
  xpos 565
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0329 0.01192 0 1}
  multiply_panelDropped true
  name Grade58
  xpos 479
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.04677 0.017 0 1}
  multiply_panelDropped true
  name Grade57
  xpos 395
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0636 0.0232 0 1}
  multiply_panelDropped true
  name Grade56
  xpos 315
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0874 0.032 0 1}
  multiply_panelDropped true
  name Grade55
  xpos 233
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.1212 0.04458 0 1}
  multiply_panelDropped true
  name Grade54
  xpos 147
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.1649 0.061 0 1}
  multiply_panelDropped true
  name Grade53
  xpos 65
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.2187 0.0816 0 1}
  multiply_panelDropped true
  name Grade52
  xpos -18
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.2835 0.107 0 1}
  multiply_panelDropped true
  name Grade51
  xpos -105
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.3608 0.1382 1e-05 1}
  multiply_panelDropped true
  name Grade50
  xpos -189
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.4479 0.175 2e-05 1}
  multiply_panelDropped true
  name Grade49
  xpos -275
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.5419 0.217 3e-05 1}
  multiply_panelDropped true
  name Grade48
  xpos -359
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.6424 0.265 4.999999e-05 1}
  multiply_panelDropped true
  name Grade47
  xpos -444
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.7514 0.321 0.0001 1}
  multiply_panelDropped true
  name Grade46
  xpos -528
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.8544499 0.381 0.00019 1}
  multiply_panelDropped true
  name Grade45
  xpos -611
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.9384 0.4412 0.00024 1}
  multiply_panelDropped true
  name Grade44
  xpos -695
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {1.0026 0.503 0.00034 1}
  multiply_panelDropped true
  name Grade43
  xpos -782
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {1.0456 0.5668 0.0006 1}
  multiply_panelDropped true
  name Grade42
  xpos -867
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {1.0622 0.631 0.0008 1}
  multiply_panelDropped true
  name Grade41
  xpos -951
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {1.0567 0.6949 0.001 1}
  multiply_panelDropped true
  name Grade40
  xpos -1034
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {1.0263 0.757 0.0011 1}
  multiply_panelDropped true
  name Grade39
  xpos -1118
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.9786 0.8163 0.0014 1}
  multiply_panelDropped true
  name Grade38
  xpos -1205
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.9163 0.87 0.001650001 1}
  multiply_panelDropped true
  name Grade37
  xpos -1296
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.8425 0.9154 0.0018 1}
  multiply_panelDropped true
  name Grade36
  xpos -1382
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.7621 0.952 0.0021 1}
  multiply_panelDropped true
  name Grade35
  xpos -1467
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.6784 0.9786 0.002749999 1}
  multiply_panelDropped true
  name Grade34
  xpos -1551
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.5945 0.995 0.0039 1}
  multiply_panelDropped true
  name Grade33
  xpos -1636
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.5120501 1 0.005749999 1}
  multiply_panelDropped true
  name Grade32
  xpos -1722
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.4334499 0.9949501 0.008749999 1}
  multiply_panelDropped true
  name Grade31
  xpos -1805
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.3597 0.9803 0.0134 1}
  multiply_panelDropped true
  name Grade30
  xpos -1890
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.2904 0.954 0.0203 1}
  multiply_panelDropped true
  name Grade29
  xpos -1976
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.2257499 0.9148501 0.02984 1}
  multiply_panelDropped true
  name Grade28
  xpos -2061
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.1655 0.862 0.04216 1}
  multiply_panelDropped true
  name Grade27
  xpos -2145
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.1096 0.7932 0.05725001 1}
  multiply_panelDropped true
  name Grade26
  xpos -2230
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.06327 0.71 0.07824999 1}
  multiply_panelDropped true
  name Grade25
  xpos -2316
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0291 0.6082 0.1117 1}
  multiply_panelDropped true
  name Grade24
  xpos -2402
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0093 0.503 0.1582 1}
  multiply_panelDropped true
  name Grade23
  xpos -2489
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0024 0.4073 0.2123 1}
  multiply_panelDropped true
  name Grade22
  xpos -2576
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0049 0.323 0.272 1}
  multiply_panelDropped true
  name Grade21
  xpos -2664
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.0147 0.2586 0.3533 1}
  multiply_panelDropped true
  name Grade20
  xpos -2750
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.03201 0.20802 0.46518 1}
  multiply_panelDropped true
  name Grade19
  xpos -2838
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.05795001 0.1693 0.6162 1}
  multiply_panelDropped true
  name Grade18
  xpos -2925
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.09564 0.13902 0.8129501 1}
  multiply_panelDropped true
  name Grade17
  xpos -3012
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.1421 0.1126 1.0419 1}
  multiply_panelDropped true
  name Grade16
  xpos -3102
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.19536 0.09098 1.28764 1}
  multiply_panelDropped true
  name Grade15
  xpos -3189
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.2511 0.0739 1.5281 1}
  multiply_panelDropped true
  name Grade14
  xpos -3274
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.2908 0.06 1.6692 1}
  multiply_panelDropped true
  name Grade13
  xpos -3362
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.3187 0.048 1.7441 1}
  multiply_panelDropped true
  name Grade12
  xpos -3452
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.3362 0.038 1.77211 1}
  multiply_panelDropped true
  name Grade11
  xpos -3541
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.34806 0.0298 1.7826 1}
  multiply_panelDropped true
  name Grade9
  xpos -3631
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.34828 0.023 1.74706 1}
  multiply_panelDropped true
  name Grade8
  xpos -3729
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.3285 0.01684 1.62296 1}
  multiply_panelDropped true
  name Grade7
  xpos -3820
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.2839 0.0116 1.3856 1}
  multiply_panelDropped true
  name Grade6
  xpos -3911
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.21477 0.0073 1.0390501 1}
  multiply_panelDropped true
  name Grade5
  xpos -4001
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.13438 0.004 0.6456 1}
  multiply_panelDropped true
  name Grade4
  xpos -4099
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.07763 0.00218 0.3713 1}
  multiply_panelDropped true
  name Grade3
  xpos -4204
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.04351 0.00121 0.2074 1}
  multiply_panelDropped true
  name Grade2
  xpos -4312
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.02319 0.00064 0.1102 1}
  multiply_panelDropped true
  name Grade1
  xpos -4406
  ypos -100
 }
push $Nfb337000
 Grade {
  multiply {0.01431 0.000396 0.06785001 1}
  multiply_panelDropped true
  name Grade10
  xpos -4493
  ypos -100
 }
 ContactSheet {
  inputs 61
  width 1920
  height 1240
  rows 61
  columns 1
  startframe 1
  endframe 1
  name ContactSheet1
  xpos 1
  ypos 29
 }
 Group {
  name GamutConvert_live
  tile_color 0xcc804eff
  label "XYZ D65 to ACES AP0"
  xpos 1
  ypos 53
  addUserKnob {20 Params}
  addUserKnob {35 presets_src l src M {"gamut/ACES AP0" "knobs this \{src_name \"ACES AP0\" src \"0.7347 0.2653 0.0 1.0 0.0001 -0.077 0.32168 0.33767\"\}" "gamut/ACES AP1" "knobs this \{src_name \"ACES AP1\" src \"0.713 0.293 0.165 0.83 0.128 0.044 0.32168 0.33767\"\}" "gamut/Filmlight E-Gamut" "knobs this \{src_name \"Filmlight E-Gamut\" src \"0.8 0.3177 0.18 0.9 0.065 -0.0805 0.3127 0.329\"\}" "gamut/DaVinci Wide Gamut" "knobs this \{src_name \"DaVinci Wide Gamut\" src \"0.8 0.313 0.1682 0.9877 0.079 -0.1155 0.3127 0.329\"\}" gamut/Rec709 "knobs this \{src_name \"Rec709\" src \"0.64 0.33 0.3 0.6 0.15 0.06 0.3127 0.329\"\}" gamut/Rec2020 "knobs this \{src_name \"Rec2020\" src \"0.708 0.292 0.17 0.797 0.131 0.046 0.3127 0.329\"\}" gamut/P3D60 "knobs this \{src_name \"P3D60\" src \"0.68 0.32 0.265 0.69 0.15 0.06 0.321626 0.337737\"\}" gamut/P3D65 "knobs this \{src_name \"P3D65\" src \"0.68 0.32 0.265 0.69 0.15 0.06 0.3127 0.329\"\}" gamut/P3DCI "knobs this \{src_name \"P3DCI\" src \"0.68 0.32 0.265 0.69 0.15 0.06 0.314 0.351\"\}" "gamut/Arri Alexa Wide Gamut v3" "knobs this \{src_name \"Arri Alexa Wide Gamut v3\" src \"0.684 0.313 0.221 0.848 0.0861 -0.102 0.3127 0.329\"\}" "gamut/Arri Alexa Wide Gamut v4" "knobs this \{src_name \"Arri Alexa Wide Gamut v4\" src \"0.7347 0.2653 0.1424 0.8576 0.0991 -0.0308 0.3127 0.329\"\}" "gamut/RED Wide Gamut RGB" "knobs this \{src_name \"RED Wide Gamut RGB\" src \"0.780308 0.304253 0.121595 1.493994 0.095612 -0.084589 0.3127 0.329\"\}" "gamut/GoPro Protune Native" "knobs this \{src_name \"GoPro Protune Native\" src \"0.69848046 0.19302645 0.32955538 1.02459662 0.10844263 -0.03467857 0.3127 0.329\"\}" "gamut/Canon Cinema Gamut" "knobs this \{src_name \"Canon Cinema Gamut\" src \"0.74 0.27 0.17 1.14 0.08 -0.1 0.3127 0.329\"\}" "gamut/Sony SGamut3" "knobs this \{src_name \"Sony SGamut3\" src \"0.73 0.28 0.14 0.855 0.1 -0.05 0.3127 0.329\"\}" "gamut/Sony SGamut3.Cine" "knobs this \{src_name \"Sony SGamut3.Cine\" src \"0.766 0.275 0.225 0.8 0.089 -0.087 0.3127 0.329\"\}" "gamut/Panasonic V-Gamut" "knobs this \{src_name \"Panasonic V-Gamut\" src \"0.73 0.28 0.165 0.84 0.1 -0.03 0.3127 0.329\"\}" "gamut/DJI D-Gamut" "knobs this \{src_name \"DJI D-Gamut\" src \"0.71 0.31 0.21 0.88 0.09 -0.08 0.3127 0.329\"\}" "gamut/Fujifilm F-Gamut" "knobs this \{src_name \"Fujifilm F-Gamut\" src \"0.708 0.292 0.17 0.797 0.131 0.046 0.3127 0.329\"\}" "gamut/Nikon N-Gamut" "knobs this \{src_name \"Nikon N-Gamut\" src \"0.708 0.292 0.17 0.797 0.131 0.046 0.3127 0.329\"\}" "gamut/Blackmagic Wide Gamut" "knobs this \{src_name \"Blackmagic Wide Gamut\" src \"0.7177215 0.3171181 0.228041 0.861569 0.1005841 -0.0820452 0.3127 0.329\"\}" "gamut/Adobe RGB" "knobs this \{src_name \"Adobe RGB\" src \"0.64 0.33 0.21 0.71 0.15 0.06 0.3127 0.329\"\}" "gamut/Adobe WideGamutRGB" "knobs this \{src_name \"Adobe WideGamutRGB\" src \"0.7347 0.2653 0.1152 0.8264 0.1566 0.0177 0.3457 0.3585\"\}" gamut/ProPhotoRGB "knobs this \{src_name \"ProPhotoRGB\" src \"0.734699 0.265301 0.159597 0.840403 0.036598 0.000105 0.345704 0.358540\"\}" "" "" "" "" "" ""}}
  addUserKnob {1 src_name l "" -STARTLINE}
  src_name "XYZ D65"
  addUserKnob {41 src l " " T _knobchanged_.src}
  addUserKnob {35 presets_dst l dst M {gamut/XYZ "knobs this \{dst_name \"XYZ\" dst \"\"\}" "gamut/XYZ D65" "knobs this \{dst_name \"XYZ D65\" dst \"1 0 0 1 0 0 0.3127 0.329\"\}" "gamut/ACES AP0" "knobs this \{dst_name \"ACES AP0\" dst \"0.7347 0.2653 0.0 1.0 0.0001 -0.077 0.32168 0.33767\"\}" "gamut/ACES AP1" "knobs this \{dst_name \"ACES AP1\" dst \"0.713 0.293 0.165 0.83 0.128 0.044 0.32168 0.33767\"\}" "gamut/Filmlight E-Gamut" "knobs this \{dst_name \"Filmlight E-Gamut\" dst \"0.8 0.3177 0.18 0.9 0.065 -0.0805 0.3127 0.329\"\}" "gamut/DaVinci Wide Gamut" "knobs this \{dst_name \"DaVinci Wide Gamut\" dst \"0.8 0.313 0.1682 0.9877 0.079 -0.1155 0.3127 0.329\"\}" gamut/Rec709 "knobs this \{dst_name \"Rec709\" dst \"0.64 0.33 0.3 0.6 0.15 0.06 0.3127 0.329\"\}" gamut/Rec2020 "knobs this \{dst_name \"Rec2020\" dst \"0.708 0.292 0.17 0.797 0.131 0.046 0.3127 0.329\"\}" gamut/P3D60 "knobs this \{dst_name \"P3D60\" dst \"0.68 0.32 0.265 0.69 0.15 0.06 0.321626 0.337737\"\}" gamut/P3D65 "knobs this \{dst_name \"P3D65\" dst \"0.68 0.32 0.265 0.69 0.15 0.06 0.3127 0.329\"\}" gamut/P3DCI "knobs this \{dst_name \"P3DCI\" dst \"0.68 0.32 0.265 0.69 0.15 0.06 0.314 0.351\"\}" "gamut/Arri Alexa Wide Gamut v3" "knobs this \{dst_name \"Arri Alexa Wide Gamut v3\" dst \"0.684 0.313 0.221 0.848 0.0861 -0.102 0.3127 0.329\"\}" "gamut/Arri Alexa Wide Gamut v4" "knobs this \{dst_name \"Arri Alexa Wide Gamut v4\" dst \"0.7347 0.2653 0.1424 0.8576 0.0991 -0.0308 0.3127 0.329\"\}" "gamut/RED Wide Gamut RGB" "knobs this \{dst_name \"RED Wide Gamut RGB\" dst \"0.780308 0.304253 0.121595 1.493994 0.095612 -0.084589 0.3127 0.329\"\}" "gamut/GoPro Protune Native" "knobs this \{dst_name \"GoPro Protune Native\" dst \"0.69848046 0.19302645 0.32955538 1.02459662 0.10844263 -0.03467857 0.3127 0.329\"\}" "gamut/Canon Cinema Gamut" "knobs this \{dst_name \"Canon Cinema Gamut\" dst \"0.74 0.27 0.17 1.14 0.08 -0.1 0.3127 0.329\"\}" "gamut/Sony SGamut3" "knobs this \{dst_name \"Sony SGamut3\" dst \"0.73 0.28 0.14 0.855 0.1 -0.05 0.3127 0.329\"\}" "gamut/Sony SGamut3.Cine" "knobs this \{dst_name \"Sony SGamut3.Cine\" dst \"0.766 0.275 0.225 0.8 0.089 -0.087 0.3127 0.329\"\}" "gamut/Panasonic V-Gamut" "knobs this \{dst_name \"Panasonic V-Gamut\" dst \"0.73 0.28 0.165 0.84 0.1 -0.03 0.3127 0.329\"\}" "gamut/DJI D-Gamut" "knobs this \{dst_name \"DJI D-Gamut\" dst \"0.71 0.31 0.21 0.88 0.09 -0.08 0.3127 0.329\"\}" "gamut/Fujifilm F-Gamut" "knobs this \{dst_name \"Fujifilm F-Gamut\" dst \"0.708 0.292 0.17 0.797 0.131 0.046 0.3127 0.329\"\}" "gamut/Nikon N-Gamut" "knobs this \{dst_name \"Nikon N-Gamut\" dst \"0.708 0.292 0.17 0.797 0.131 0.046 0.3127 0.329\"\}" "gamut/Blackmagic Wide Gamut" "knobs this \{dst_name \"Blackmagic Wide Gamut\" dst \"0.7177215 0.3171181 0.228041 0.861569 0.1005841 -0.0820452 0.3127 0.329\"\}" "gamut/Adobe RGB" "knobs this \{dst_name \"Adobe RGB\" dst \"0.64 0.33 0.21 0.71 0.15 0.06 0.3127 0.329\"\}" "gamut/Adobe WideGamutRGB" "knobs this \{dst_name \"Adobe WideGamutRGB\" dst \"0.7347 0.2653 0.1152 0.8264 0.1566 0.0177 0.3457 0.3585\"\}" gamut/ProPhotoRGB "knobs this \{dst_name \"ProPhotoRGB\" dst \"0.734699 0.265301 0.159597 0.840403 0.036598 0.000105 0.345704 0.358540\"\}" "" "" "" "" ""}}
  addUserKnob {1 dst_name l "" -STARTLINE}
  dst_name "ACES AP0"
  addUserKnob {41 dst l " " T _knobchanged_.dst}
  addUserKnob {41 cat T _knobchanged_.cat}
  addUserKnob {26 ""}
  addUserKnob {41 invert T _knobchanged_.invert}
  addUserKnob {6 print_mtx l print t "print a few useful representations of the matrix ni the script editor, for OCIO MatrixTransforms, spimtx files, etc" -STARTLINE}
  addUserKnob {41 matrix T ColorMatrix.matrix}
  addUserKnob {22 create_colormatrix l "Create ColorMatrix" t "create ColorMatrix node using calculated 3x3 matrix" -STARTLINE T "from __future__ import with_statement\nnode = nuke.thisNode()\nwith nuke.root():\n    nukescripts.clear_selection_recursive()\n    m = nuke.createNode('ColorMatrix')\n    m.setXYpos(node.xpos()-120, node.ypos())\n    m\['matrix'].setValue(node\['matrix'].getValue())\n    m\['label'].setValue(node\['label'].getValue())"}
 }
  Input {
   inputs 0
   name Input
   xpos -40
   ypos 206
  }
  Dot {
   name _knobchanged_
   knobChanged "import nuke\n\ndef matmul(m0, m1):\n  # multiply two square matrices\n  return \[\[sum(a*b for a,b in zip(r, c)) for c in zip(*m1)] for r in m0]\n\ndef vdot(m, v):\n  # multiply AxA matrix by Ax1 vector\n  return \[sum(x*y for x,y in zip(r,v)) for r in m]\n\ndef transpose(m):\n  # transpose matrix m by swapping rows and cols\n  return \[list(r) for r in zip(*m)]\n\ndef zeros(l):\n  # create square matrix of size l\n  return \[\[0.0]*l for i in range(l)]\n\ndef diag(m, v):\n  # set diagonal row of matrix m to vector v or float v\n  if isinstance(v, float): \n    v = \[v]*len(m)\n  for p in range(len(m)):\n    m\[p]\[p] = v\[p]\n  return m\n\ndef identity(l):\n  # return identity matrix of size l\n  return diag(zeros(3), 1.0)\n\ndef det(m):\n  # calculate determinant of 3x3 matrix m\n  return m\[0]\[0]*(m\[1]\[1]*m\[2]\[2]-m\[2]\[1]*m\[1]\[2])-m\[0]\[1]*(m\[1]\[0]*m\[2]\[2]-m\[1]\[2]*m\[2]\[0])+m\[0]\[2]*(m\[1]\[0]*m\[2]\[1]-m\[1]\[1]*m\[2]\[0])\n\ndef inv(m):\n  # invert 3x3 matrix m\n  d = det(m)\n  if d == 0.0:\n    return m\n  i = zeros(3)\n  i\[0]\[0] = (m\[1]\[1]*m\[2]\[2]-m\[2]\[1]*m\[1]\[2])/d\n  i\[0]\[1] = (m\[0]\[2]*m\[2]\[1]-m\[0]\[1]*m\[2]\[2])/d\n  i\[0]\[2] = (m\[0]\[1]*m\[1]\[2]-m\[0]\[2]*m\[1]\[1])/d\n  i\[1]\[0] = (m\[1]\[2]*m\[2]\[0]-m\[1]\[0]*m\[2]\[2])/d\n  i\[1]\[1] = (m\[0]\[0]*m\[2]\[2]-m\[0]\[2]*m\[2]\[0])/d\n  i\[1]\[2] = (m\[1]\[0]*m\[0]\[2]-m\[0]\[0]*m\[1]\[2])/d\n  i\[2]\[0] = (m\[1]\[0]*m\[2]\[1]-m\[2]\[0]*m\[1]\[1])/d\n  i\[2]\[1] = (m\[2]\[0]*m\[0]\[1]-m\[0]\[0]*m\[2]\[1])/d\n  i\[2]\[2] = (m\[0]\[0]*m\[1]\[1]-m\[1]\[0]*m\[0]\[1])/d\n  return i\n\ndef flatten(l):\n  # flatten multidimensional list into one dimensional list\n  return sum(l, \[])\n\ndef npm(ch):\n  # Calculate the Normalized Primaries Matrix for the specified chromaticities\n  # Adapted from SMPTE Recommended Practice - Derivation of Basic Television Color Equations\n  # http://doi.org/10.5594/S9781614821915\n  if len(ch) == 8: # handle flat list\n    ch = \[\[ch\[0], ch\[1]], \[ch\[2], ch\[3]], \[ch\[4], ch\[5]], \[ch\[6], ch\[7]]]\n  for c in ch:\n    c.append(1.0-c\[0]-c\[1]) \n  P = transpose(\[ch\[0], ch\[1], ch\[2]])\n  W = \[ch\[3]\[0] / ch\[3]\[1], 1.0, ch\[3]\[2] / ch\[3]\[1]]\n  C = vdot(inv(P), W)\n  C = diag(zeros(3), C)\n  return matmul(P, C)\n\ndef cat(ws, wd, method='bradford'):\n  # Calculate a von Kries style chromatic adaptation transform matrix given xy chromaticities for src and dst white\n  # Source: Mark D. Fairchild - 2013 - Color Appearance Models Third Edition p. 181-186\n  # Source: Bruce Lindbloom - Chromatic Adaptation - http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html\n  if ws == wd: # src and dst are equal, nothing to do\n    return identity(3)\n  if method == 'bradford':\n    mcat = \[\[0.8951, 0.2664, -0.1614], \[-0.7502, 1.7135, 0.0367], \[0.0389, -0.0685, 1.0296]]\n  elif method == 'cat02':\n    mcat = \[\[0.7328, 0.4296, -0.1624], \[-0.7036, 1.6975, 0.0061], \[0.003, 0.0136, 0.9834]]\n  else:\n    mcat = identity(3)\n  \n  def xy_to_XYZ(xy):\n    # convert xy chromaticity to XYZ tristimulus with Y=1.0\n    return \[xy\[0]/xy\[1], 1.0, (1.0-xy\[0]-xy\[1])/xy\[1]]\n  \n  sXYZ = xy_to_XYZ(ws)\n  dXYZ = xy_to_XYZ(wd)\n  \n  s_cone_mtx = vdot(mcat, sXYZ)\n  d_cone_mtx = vdot(mcat, dXYZ)\n  \n  smat = diag(zeros(3), \[a/b for a,b in zip(d_cone_mtx, s_cone_mtx)])\n  nmtx = matmul(inv(mcat), smat)\n  return matmul(nmtx, mcat)\n\ndef wp(ch):\n  # return whitepoint of chromaticities array\n  return ch\[-2:]\n\ndef is_xyz(ch):\n  # test if ch is XYZ\n  prims = ch\[:-2]\n  return True if prims == \[1, 0, 0, 1, 0, 0] else False\n\ndef calc_mtx(ch0, ch1, method='bradford'):\n  # calculate 3x3 matrix to convert gamut ch0 to ch1, with cat\n  if not ch1:\n    return npm(ch0)\n  rgb0_to_xyz = identity(3) if is_xyz(ch0) else npm(ch0)\n  rgb1_to_xyz = identity(3) if is_xyz(ch1) else npm(ch1)\n  xyz_to_cat = cat(wp(ch0), wp(ch1), method=method)\n  rgb0_to_cat = matmul(xyz_to_cat, rgb0_to_xyz)\n  rgb0_to_rgb1 = matmul(inv(rgb1_to_xyz), rgb0_to_cat)\n  return rgb0_to_rgb1\n\n\n\nnode = nuke.thisParent()\n\ndef get_ch(k):\n  # get chromaticities from knob name k\n  ch_str = node\[k].getValue()\n  if ' ' in ch_str:\n    chs = ch_str.split(' ')\n    if not len(chs) == 8:\n      print('Error: need 8 space-separated float xy coordinates for RGBW')\n      return None\n    else:\n      ch = list()\n      for c in chs:\n        try:\n          ch.append(float(c))\n        except ValueError:\n          print('Error: could not convert \{0\} to float'.format(c))\n          return None\n      return ch\n  else:\n    return None\n\ndef print_mtx(mtx):\n  label = node\['label'].getValue()\n  \n  # round to 12 digits of precision\n  mtx_str = \[format(round(v, 12), '.12g') for v in flatten(mtx)]\n  \n  # print some useful representations of the matrix\n  # an ocio matrixtransform\n  mtx_str_pad = mtx_str\[0:3]+\['0']+mtx_str\[3:6]+\['0']+mtx_str\[6:9]+\['0']*4+\['1']\n  mtx_string = ', '.join(map(str, mtx_str_pad))\n  ocio_matrixtransform_string = '!<MatrixTransform> \{\{matrix: \[\{0\}]\}\}'.format(mtx_string)\n  print('\{0\} - OCIO MatrixTransform\\n\{1\}\\n'.format(label, ocio_matrixtransform_string))\n  \n  # an spimtx file\n  spimtx_string = '\{0\} 0\\n\{1\} 0\\n\{2\} 0'.format(\n    ' '.join(mtx_str\[0:3]),\n    ' '.join(mtx_str\[3:6]),\n    ' '.join(mtx_str\[6:9]),\n  )\n  print('\{0\}.spimtx\\n\{1\}\\n'.format(label, spimtx_string))\n\ndef reset():\n  # reset matrix\n  node\['matrix'].setValue(flatten(identity(3)))\n  \ndef calc():\n  # gather node info\n  src_ch = get_ch('src')\n  if not src_ch:\n    reset()\n    return\n  dst_ch = get_ch('dst')\n  cat_method = node\['cat'].value()\n  mtx = calc_mtx(src_ch, dst_ch, method=cat_method)\n  if node\['invert'].getValue():\n    mtx = inv(mtx)\n  node\['matrix'].setValue(flatten(mtx))\n  label = '\{1\} to \{0\}' if node\['invert'].getValue() else '\{0\} to \{1\}'\n  label = label.format(node\['src_name'].getValue(), node\['dst_name'].getValue())\n  node\['label'].setValue(label)\n  if node\['print_mtx'].getValue():\n    print_mtx(mtx)\n    \ncalc()"
   tile_color 0xc1490000
   note_font "Helvetica Bold"
   note_font_size 24
   note_font_color 0xff
   xpos -6
   ypos 234
   addUserKnob {20 Params}
   addUserKnob {1 src l " " t "source gamut chromaticities: rgbw"}
   src "1 0 0 1 0 0 0.3127 0.329"
   addUserKnob {1 dst l " " t "destination gamut chromaticities: rgbw"}
   dst "0.7347 0.2653 0.0 1.0 0.0001 -0.077 0.32168 0.33767"
   addUserKnob {83 cat M {bradford cat02 none}}
   cat cat02
   addUserKnob {6 invert t "invert matrix direction" +STARTLINE}
  }
  ColorMatrix {
   matrix {
       {1.062366107 0.008406953654 -0.01665578963}
       {-0.4939413716 1.371109525 0.09031658697}
       {-0.0003346685774 -0.001037458272 0.9194696473}
     }
   name ColorMatrix
   note_font Helvetica
   xpos -40
   ypos 255
  }
  Output {
   name Output
   xpos -40
   ypos 302
  }
 end_group
 Output {
  name Output1
  xpos 1
  ypos 163
 }
end_group
